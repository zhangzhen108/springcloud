##  服务端口
server:
  port: 8091
##  服务名称
spring:
  application:
    name: order-server
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
      #type: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://39.106.62.195:3306/elearing?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false&useAffectedRows=true
    username: root
    password: 123456
    druid:
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
        # 配置获取连接等待超时的时间
      maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      validationQueryTimeout: 10000
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,log4j
      filter:
        wall:
          config:
            enabled: true
            multiStatementAllow: true
            noneBaseStatementAllow: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录 毫秒
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
        # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"

        # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: "false"
        allow:
          #IP黑名单 (存在共同时，deny优先于allow)
        deny:
        login-username: admin
        login-password: admin
        # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.order.service.impl.*
##  eureka配置
eureka:
  client:
    service-url:
      defaultZone:   http://localhost:8090/eureka/
##  日志
logging:
  level:
    root: info
    com:
      netflix:
        eureka: 'off'
        discovery:  'off'
## 关闭管理类接口的安全认证
management:
  security:
    enabled: false
# application:
mybatis:
  #pojo路径
  type-aliases-package: com.order.domain
  #    type-aliases-package: com.cowell.digitalstore.service.dto
  #mapper路径
  mapper-locations: classpath:mybatis/mapper/*Mapper.xml
pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql